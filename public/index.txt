<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            color: #333;
            line-height: 1.6;
            height: 100%;
            display: flex;
            flex-direction: column;
            transition: background-color 0.3s, color 0.3s;
        }

        .container {
            max-width: 1100px;
            margin: auto;
            overflow: hidden;
            padding: 0 20px;
        }

        header {
            background: #4dcfe1;
            color: #fff;
            padding: 1rem 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        header .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        header h1 {
            margin: 0;
            font-size: 24px;
        }

        header nav ul {
            padding: 0;
            margin: 0;
            list-style: none;
            display: flex;
            align-items: center;
        }

        header nav ul li {
            display: inline;
            margin-left: 20px;
        }

        header nav a {
            color: #fff;
            text-decoration: none;
            font-weight: bold;
        }

        .theme-toggle {
            background: #333;
            color: #fff;
            border: none;
            padding: 6px 12px;
            border-radius: 5px;
            cursor: pointer;
            margin-left: 20px;
            font-size: 14px;
            transition: background 0.3s;
        }

        .theme-toggle:hover {
            background: #222;
        }

        main {
            flex-grow: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            width: 100%;
            max-width: 800px;
            height: 70vh;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: background-color 0.3s;
        }

        .chat-messages {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
            border-bottom: 1px solid #eee;
        }

        .message {
            margin-bottom: 15px;
            display: flex;
        }

        .message.user {
            justify-content: flex-end;
        }

        .message.bot {
            justify-content: flex-start;
        }

        .message-bubble {
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 20px;
            line-height: 1.4;
            word-wrap: break-word;
        }

        .message.user .message-bubble {
            background-color: #4dcfe1;
            color: white;
            border-bottom-right-radius: 5px;
        }

        .message.bot .message-bubble {
            background-color: #e0e0e0;
            color: #333;
            border-bottom-left-radius: 5px;
        }

        .chat-input {
            display: flex;
            padding: 20px;
            background-color: #f9f9f9;
            border-top: 1px solid #eee;
        }

        .chat-input input[type="text"] {
            flex-grow: 1;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 20px;
            font-size: 16px;
            margin-right: 10px;
        }

        .chat-input button {
            background-color: black;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .chat-input button:hover {
            background-color: #466265;
        }

        footer {
            text-align: center;
            padding: 20px;
            background: #333;
            color: #fff;
            margin-top: auto;
        }

        /* ================= */
        /* MODO ESCURO */
        /* ================= */
        body.dark-mode {
            background-color: #1e1e1e;
            color: #f4f4f9;
        }

        body.dark-mode .chat-container {
            background-color: #2c2c2c;
        }

        body.dark-mode .message.bot .message-bubble {
            background-color: #444;
            color: #f4f4f9;
        }

        body.dark-mode .chat-input {
            background-color: #2c2c2c;
            border-top: 1px solid #555;
        }

        body.dark-mode .chat-input input[type="text"] {
            background-color: #444;
            color: #fff;
            border: 1px solid #666;
        }

        body.dark-mode footer {
            background: #111;
        }

        body.dark-mode .theme-toggle {
            background: #eee;
            color: #111;
        }

        body.dark-mode .theme-toggle:hover {
            background: #ddd;
        }

        /* ================= */
        /* LOADING ANIMA√á√ÉO */
        /* ================= */
        .loading-dots {
            display: flex;
            gap: 4px;
            align-items: center;
        }

        .loading-dots span {
            width: 6px;
            height: 6px;
            background: #333;
            border-radius: 50%;
            display: inline-block;
            animation: blink 1.4s infinite both;
        }

        .loading-dots span:nth-child(2) {
            animation-delay: 0.2s;
        }

        .loading-dots span:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes blink {
            0%, 80%, 100% { opacity: 0; }
            40% { opacity: 1; }
        }

        body.dark-mode .loading-dots span {
            background: #f4f4f9;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Meu Chatbot</h1>
            <nav>
                <ul>
                    <li><a href="index.html">In√≠cio</a></li>
                    <li><a href="login.html">Login</a></li>
                    <li><a href="cadastro.html">Cadastro</a></li>
                    <li><button id="theme-toggle" class="theme-toggle">üåô Escuro</button></li>
                </ul>
            </nav>
        </div>
    </header>

    <main>
        <div class="chat-container">
            <div class="chat-messages" id="chat-messages">
                <!-- Mensagem inicial do bot -->
                <div class="message bot">
                    <div class="message-bubble">Ol√°! Como posso ajudar voc√™ hoje?</div>
                </div>
            </div>
            <div class="chat-input">
                <input type="text" id="user-input" placeholder="Digite sua mensagem...">
                <button id="send-button">Enviar</button>
            </div>
        </div>
    </main>

    <footer>
        <p>&copy; 2024 Meu Chatbot. Todos os direitos reservados.</p>
    </footer>

    
    <!-- Biblioteca Marked para Markdown -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

    <script>
        const chatMessages = document.getElementById('chat-messages');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');
        const themeToggle = document.getElementById('theme-toggle');

        // Alternar Tema
        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode');
            const darkMode = document.body.classList.contains('dark-mode');
            themeToggle.textContent = darkMode ? "‚òÄÔ∏è Claro" : "üåô Escuro";
            localStorage.setItem('theme', darkMode ? 'dark' : 'light');
        });

        // Carregar tema salvo
        if (localStorage.getItem('theme') === 'dark') {
            document.body.classList.add('dark-mode');
            themeToggle.textContent = "‚òÄÔ∏è Claro";
        }

        sendButton.addEventListener('click', sendMessage);
        userInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        async function sendMessage() {
            const messageText = userInput.value.trim();
            if (messageText === '') return;

            // Mensagem do usu√°rio
            const userMessageDiv = document.createElement('div');
            userMessageDiv.classList.add('message', 'user');
            userMessageDiv.innerHTML = `<div class="message-bubble">${messageText}</div>`;
            chatMessages.appendChild(userMessageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            // Limpar input
            userInput.value = '';
            userInput.disabled = true;
            sendButton.disabled = true;
            userInput.placeholder = "Aguardando resposta...";

            // Adiciona anima√ß√£o de carregamento
            const loadingDiv = document.createElement('div');
            loadingDiv.classList.add('message', 'bot');
            loadingDiv.innerHTML = `
                <div class="message-bubble">
                    <div class="loading-dots">
                        <span></span><span></span><span></span>
                    </div>
                </div>
            `;
            chatMessages.appendChild(loadingDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            try {
                const response = await fetch('/chat', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message: messageText })
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Erro desconhecido do servidor.');
                }

                const data = await response.json();
                const botReply = data.reply;

                // Remove loading
                chatMessages.removeChild(loadingDiv);

                // Resposta do bot
                const botMessageDiv = document.createElement('div');
                botMessageDiv.classList.add('message', 'bot');
                botMessageDiv.innerHTML = `<div class="message-bubble">${marked.parse(botReply)}</div>`;
                chatMessages.appendChild(botMessageDiv);

            } catch (error) {
                console.error('Erro ao enviar mensagem:', error);
                chatMessages.removeChild(loadingDiv);

                const errorMessageDiv = document.createElement('div');
                errorMessageDiv.classList.add('message', 'bot');
                errorMessageDiv.innerHTML = `<div class="message-bubble" style="color: red;">Erro: ${error.message}. Por favor, tente novamente.</div>`;
                chatMessages.appendChild(errorMessageDiv);
            } finally {
                userInput.disabled = false;
                sendButton.disabled = false;
                userInput.placeholder = "Digite sua mensagem...";
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        }
    </script>
</body>
</html>
